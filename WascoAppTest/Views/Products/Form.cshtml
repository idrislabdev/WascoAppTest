@using WascoAppTest.ViewModels.Products;
@model ProductsFormViewModel;

@{
    ViewData["Titles"] = "Add Product";
}

<form asp-action="AddOrUpdate" method="post">
    <input type="text" class="d-none" asp-for="ProductId" placeholder="ProductId">
    <div class="row">
        <div class="col-md-6">
            @if (Model.CategoryId == 0)
            {
                <h5>Add a new Product</h5>
            }
            else
            {
                <h5>Update Product</h5>

            }
            <hr />
            <div class="form-group">
                <label asp-for="CategoryId" class="form-label"></label>
                <select class="form-select" asp-for="CategoryId" asp-items="Model.Categories"  data-placeholder="Select a Category">
                    <option value=""> </option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductName" class="form-label mt-2"></label>
                <input type="text" class="form-control" asp-for="ProductName" placeholder="Product name">
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="form-label mt-2"></label>
                <input type="text" class="form-control" asp-for="Price" placeholder="Price">
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="d-flex align-items-center gap-1 mt-3">
                <a asp-controller="Products" asp-action="Index" class="btn btn-danger">Cancel</a>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </div>
     </div>
 </form>
 
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}